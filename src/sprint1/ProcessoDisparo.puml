@startuml

class CommunicationCommand{
	execute()
}

class CommunicationProcess{
	execute()
}


class Communication{
	
}

interface ICommunicationType{
	
}

abstract CommunicationCreator{
	AnyOperation(): void
	FactoryMethodForCommunication():ICommunicationType
	
}
abstract CommunicationTypeCreator{
	FactoryMethodForCommunication():ICommunicationType
	
}

class CommunicationTarget{
	Request()
}

class CommunicationAdapter{
	Request()
}

class CommunicationOriginal{
	Request()
}

Abstract IteratorRule{
	CurrentId()
	First()
	isDone()
	Next()
}

Class ConcreteIterator{
}

class ConcreteCollection{
}

Abstract AbstractCollection{
}

CommunicationProcess --|> CommunicationCommand
CommunicationCommand --o  CommunicationProcess
ConcreteCollection ..|> ICommunicationType
CommunicationCreator ..> ICommunicationType
CommunicationTypeCreator --|> CommunicationCreator
Communication ..> CommunicationTarget
CommunicationAdapter ..|> CommunicationTarget
CommunicationAdapter ..> CommunicationOriginal
Communication ..|> IteratorRule
ConcreteIterator --|> IteratorRule
ConcreteCollection ..> ConcreteIterator
AbstractCollection --|> ConcreteCollection
Communication --|> AbstractCollection
CommunicationProcess --> Communication
@enduml
